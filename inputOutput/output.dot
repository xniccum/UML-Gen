strict digraph G {
    fontname = "Bitstream Vera Sans"
    fontsize = 8

    node [
    fontname = "Bitstream Vera Sans"
    fontsize = 8
    shape = "record"
    ]

    edge [
    fontname = "Bitstream Vera Sans"
    fontsize = 8
    ]
LinearTransformer [   
 label = " { LinearTransformer|enumTion enumTion: Enumeration \l |+ init ( arg0 : Enumeration): void \l + transform ( arg0 : OutputStream): void \l  
 } " 
 ]
 edge [ 
  style="solid", arrowhead= "vee" 
 ] 
LinearTransformer -> EnumerationTT 

 edge [ 
  style="dashed", arrowhead= "vee" 
 ] 

 edge [ 
  style="dashed", arrowhead= "vee" 
 ] 

 edge [ 
  style="dashed", arrowhead= "vee" 
 ] 

 edge [ 
  style="dashed", arrowhead= "vee" 
 ] 

 edge [ 
  style="dashed", arrowhead= "vee" 
 ] 
LinearTransformer -> OutputStream 

 edge [ 
  style="dashed", arrowhead= "vee" 
 ] 
LinearTransformer -> Enumeration 

 edge [ 
  style="dashed", arrowhead= "vee" 
 ] 
LinearTransformer -> Enumeration 

 edge [ 
  style="dashed", arrowhead= "vee" 
 ] 

 edge [ 
  style="dashed", arrowhead= "vee" 
 ] 

 edge [ 
  style="dashed", arrowhead= "vee" 
 ] 

 edge [ 
  style="dashed", arrowhead= "vee" 
 ] 

 edge [ 
  style="dashed", arrowhead= "vee" 
 ] 

 edge [ 
  style="dashed", arrowhead= "vee" 
 ] 
LinearTransformer -> OutputStream 

 edge [ 
  style="dashed", arrowhead= "vee" 
 ] 

 edge [ 
  style="dashed", arrowhead= "vee" 
 ] 
LinearTransformer -> OutputStream 

 edge [ 
  style="dashed", arrowhead= "vee" 
 ] 

 edge [ 
  style="dashed", arrowhead= "vee" 
 ] 

 edge [ 
  style="dashed", arrowhead= "vee" 
 ] 
LinearTransformer -> OutputStream 

 edge [ 
  style="dashed", arrowhead= "vee" 
 ] 
LinearTransformer -> OutputStream 

 edge [ 
  style="dashed", arrowhead= "vee" 
 ] 

 edge [ 
  style="dashed", arrowhead= "vee" 
 ] 
LinearTransformer -> OutputStream 

 edge [ 
  style="dashed", arrowhead= "vee" 
 ] 
LinearTransformer -> OutputStream 
IteratorToEnumerationAdapter [   
 label = " { IteratorToEnumerationAdapter\l\<\<target\>\>|itr itr: Iterator \l |+ init ( arg0 : Iterator): void \l + nextElement ( ): Object \l + hasMoreElements ( ): boolean \l  
 } " 
 ]
 edge [ 
  style="solid", arrowhead= "vee" 
 ] 
IteratorToEnumerationAdapter -> IteratorTE 

 edge [ 
  style="dashed", arrowhead= "vee" 
 ] 

 edge [ 
  style="dashed", arrowhead= "vee" 
 ] 

 edge [ 
  style="dashed", arrowhead= "vee" 
 ] 

 edge [ 
  style="dashed", arrowhead= "vee" 
 ] 
IteratorToEnumerationAdapter -> Iterator 

 edge [ 
  style="dashed", arrowhead= "vee" 
 ] 

 edge [ 
  style="dashed", arrowhead= "vee" 
 ] 
IteratorToEnumerationAdapter -> Iterator 
 edge [
 style="solid", arrowhead = "empty"
]
IteratorToEnumerationAdapter -> Enumeration 
App [   
 label = " { App||+ main ( arg0 : String[]): void \l + init ( ): void \l  
 } " 
 ]
 edge [ 
  style="dashed", arrowhead= "vee" 
 ] 

 edge [ 
  style="dashed", arrowhead= "vee" 
 ] 

 edge [ 
  style="dashed", arrowhead= "vee" 
 ] 

 edge [ 
  style="dashed", arrowhead= "vee" 
 ] 

 edge [ 
  style="dashed", arrowhead= "vee" 
 ] 

 edge [ 
  style="dashed", arrowhead= "vee" 
 ] 

 edge [ 
  style="dashed", arrowhead= "vee" 
 ] 

 edge [ 
  style="dashed", arrowhead= "vee" 
 ] 

 edge [ 
  style="dashed", arrowhead= "vee" 
 ] 
App -> IteratorToEnumerationAdapter 

 edge [ 
  style="dashed", arrowhead= "vee" 
 ] 
App -> LinearTransformer 

 edge [ 
  style="dashed", arrowhead= "vee" 
 ] 
App -> LinearTransformer 

 edge [ 
  style="dashed", arrowhead= "vee" 
 ] 

 edge [ 
  style="dashed", arrowhead= "vee" 
 ] 
}