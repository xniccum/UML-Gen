strict digraph G {
    fontname = "Bitstream Vera Sans"
    fontsize = 8

    node [
    fontname = "Bitstream Vera Sans"
    fontsize = 8
    shape = "record"
    ]

    edge [
    fontname = "Bitstream Vera Sans"
    fontsize = 8
    ]
AppLauncherApplication [ 
 label = " { AppLauncherApplication|+ IN_OUT_DIR: java.lang.String \l+ LOG_FILE: java.lang.String \l|+ init ( ): void \l+ main ( arg0 : java.lang.String[]): void \l 
 } " 
 ]
 edge [ 
  style="solid", arrowhead = "normal" 
 ] 
 AppLauncherApplication -> Object 

 edge [ 
  style="solid", arrowhead= "vee" 
 ] 
 AppLauncherApplication -> String 

 edge [ 
  style="solid", arrowhead= "vee" 
 ] 
 AppLauncherApplication -> String 

 edge [ 
  style="dashed", arrowhead= "vee" 
 ] 
 AppLauncherApplication -> String[] 
ApplicationLauncher [ 
 label = " { ApplicationLauncher|- extensionToRunnerMap: java.util.Map \l|+ init ( ): void \l+ getRunners ( ): java.util.Collection \l+ addRunner ( arg0 : java.lang.String, arg1 : Lab1_3.problem.ProcessRunner): void \l+ shutDown ( ): void \l+ directoryChanged ( arg0 : Lab1_3.problem.DirectoryEvent): void \l 
 } " 
 ]
 edge [ 
  style="solid", arrowhead = "normal" 
 ] 
 ApplicationLauncher -> Object 
 edge [ 
 style="solid", arrowhead = "empty" 
 ] 
  ApplicationLauncher -> IApplicationLauncher 

 edge [ 
  style="solid", arrowhead= "vee" 
 ] 
 ApplicationLauncher -> String 

 edge [ 
  style="solid", arrowhead= "vee" 
 ] 
 ApplicationLauncher -> ProcessRunner 

 edge [ 
  style="dashed", arrowhead= "vee" 
 ] 
 ApplicationLauncher -> Collection 

 edge [ 
  style="dashed", arrowhead= "vee" 
 ] 
 ApplicationLauncher -> ProcessRunner 

 edge [ 
  style="dashed", arrowhead= "vee" 
 ] 
 ApplicationLauncher -> String 

 edge [ 
  style="dashed", arrowhead= "vee" 
 ] 
 ApplicationLauncher -> DirectoryEvent 
DataFileRunner [ 
 label = " { DataFileRunner||+ init ( arg0 : java.lang.String): void \l+ execute ( arg0 : java.nio.file.Path): void \l 
 } " 
 ]
 edge [ 
  style="solid", arrowhead = "normal" 
 ] 
 DataFileRunner -> ProcessRunner 

 edge [ 
  style="dashed", arrowhead= "vee" 
 ] 
 DataFileRunner -> String 

 edge [ 
  style="dashed", arrowhead= "vee" 
 ] 
 DataFileRunner -> Path 
DirectoryChangeLogger [ 
 label = " { DirectoryChangeLogger|- path: java.nio.file.Path \l|+ init ( arg0 : java.nio.file.Path): void \l+ directoryChanged ( arg0 : Lab1_3.problem.DirectoryEvent): void \l 
 } " 
 ]
 edge [ 
  style="solid", arrowhead = "normal" 
 ] 
 DirectoryChangeLogger -> Object 
 edge [ 
 style="solid", arrowhead = "empty" 
 ] 
  DirectoryChangeLogger -> IDirectoryListener 

 edge [ 
  style="solid", arrowhead= "vee" 
 ] 
 DirectoryChangeLogger -> Path 

 edge [ 
  style="dashed", arrowhead= "vee" 
 ] 
 DirectoryChangeLogger -> Path 

 edge [ 
  style="dashed", arrowhead= "vee" 
 ] 
 DirectoryChangeLogger -> DirectoryEvent 
DirectoryEvent [ 
 label = " { DirectoryEvent|+ ENTRY_CREATE: java.lang.String \l+ ENTRY_DELETE: java.lang.String \l+ ENTRY_MODIFY: java.lang.String \l- eventType: java.lang.String \l- file: java.nio.file.Path \l- service: Lab1_3.problem.IDirectoryMonitorService \l|+ init ( arg0 : java.lang.String, arg1 : java.nio.file.Path, arg2 : Lab1_3.problem.IDirectoryMonitorService): void \l+ getEventType ( ): java.lang.String \l+ getFile ( ): java.nio.file.Path \l+ getSource ( ): Lab1_3.problem.IDirectoryMonitorService \l 
 } " 
 ]
 edge [ 
  style="solid", arrowhead = "normal" 
 ] 
 DirectoryEvent -> Object 

 edge [ 
  style="solid", arrowhead= "vee" 
 ] 
 DirectoryEvent -> String 

 edge [ 
  style="solid", arrowhead= "vee" 
 ] 
 DirectoryEvent -> String 

 edge [ 
  style="solid", arrowhead= "vee" 
 ] 
 DirectoryEvent -> String 

 edge [ 
  style="solid", arrowhead= "vee" 
 ] 
 DirectoryEvent -> String 

 edge [ 
  style="solid", arrowhead= "vee" 
 ] 
 DirectoryEvent -> Path 

 edge [ 
  style="solid", arrowhead= "vee" 
 ] 
 DirectoryEvent -> IDirectoryMonitorService 

 edge [ 
  style="dashed", arrowhead= "vee" 
 ] 
 DirectoryEvent -> IDirectoryMonitorService 

 edge [ 
  style="dashed", arrowhead= "vee" 
 ] 
 DirectoryEvent -> String 

 edge [ 
  style="dashed", arrowhead= "vee" 
 ] 
 DirectoryEvent -> Path 

 edge [ 
  style="dashed", arrowhead= "vee" 
 ] 
 DirectoryEvent -> String 

 edge [ 
  style="dashed", arrowhead= "vee" 
 ] 
 DirectoryEvent -> Path 

 edge [ 
  style="dashed", arrowhead= "vee" 
 ] 
 DirectoryEvent -> IDirectoryMonitorService 
DirectoryMonitorService [ 
 label = " { DirectoryMonitorService|- TEMP_FILE: java.lang.String \l- dir: java.nio.file.Path \l- stop: boolean \l- watcher: java.nio.file.WatchService \l- listeners: java.util.List \l|+ init ( arg0 : java.nio.file.Path): void \l+ getDirectory ( ): java.nio.file.Path \l+ run ( ): void \l+ isRunning ( ): boolean \l+ stopGracefully ( ): void \l clearEverything ( ): void \l+ addListener ( arg0 : Lab1_3.problem.IDirectoryListener): void \l+ removeListener ( arg0 : Lab1_3.problem.IDirectoryListener): void \l notifyListeners ( arg0 : Lab1_3.problem.DirectoryEvent): void \l 
 } " 
 ]
 edge [ 
  style="solid", arrowhead = "normal" 
 ] 
 DirectoryMonitorService -> Object 
 edge [ 
 style="solid", arrowhead = "empty" 
 ] 
  DirectoryMonitorService -> IDirectoryMonitorService 

 edge [ 
  style="solid", arrowhead= "vee" 
 ] 
 DirectoryMonitorService -> String 

 edge [ 
  style="solid", arrowhead= "vee" 
 ] 
 DirectoryMonitorService -> Path 

 edge [ 
  style="solid", arrowhead= "vee" 
 ] 
 DirectoryMonitorService -> boolean 

 edge [ 
  style="solid", arrowhead= "vee" 
 ] 
 DirectoryMonitorService -> WatchService 

 edge [ 
  style="solid", arrowhead= "vee" 
 ] 
 DirectoryMonitorService -> IDirectoryListener 

 edge [ 
  style="dashed", arrowhead= "vee" 
 ] 
 DirectoryMonitorService -> Path 

 edge [ 
  style="dashed", arrowhead= "vee" 
 ] 
 DirectoryMonitorService -> Path 

 edge [ 
  style="dashed", arrowhead= "vee" 
 ] 
 DirectoryMonitorService -> boolean 

 edge [ 
  style="dashed", arrowhead= "vee" 
 ] 
 DirectoryMonitorService -> IDirectoryListener 

 edge [ 
  style="dashed", arrowhead= "vee" 
 ] 
 DirectoryMonitorService -> IDirectoryListener 

 edge [ 
  style="dashed", arrowhead= "vee" 
 ] 
 DirectoryMonitorService -> DirectoryEvent 
ExecutableFileRunner [ 
 label = " { ExecutableFileRunner||+ init ( arg0 : java.lang.String): void \l+ execute ( arg0 : java.nio.file.Path): void \l 
 } " 
 ]
 edge [ 
  style="solid", arrowhead = "normal" 
 ] 
 ExecutableFileRunner -> ProcessRunner 

 edge [ 
  style="dashed", arrowhead= "vee" 
 ] 
 ExecutableFileRunner -> String 

 edge [ 
  style="dashed", arrowhead= "vee" 
 ] 
 ExecutableFileRunner -> Path 
IApplicationLauncher [ 
 label = " { IApplicationLauncher||+ getRunners ( ): java.util.Collection \l+ addRunner ( arg0 : java.lang.String, arg1 : Lab1_3.problem.ProcessRunner): void \l+ shutDown ( ): void \l 
 } " 
 ]
 edge [ 
  style="solid", arrowhead = "normal" 
 ] 
 IApplicationLauncher -> Object 
 edge [ 
 style="solid", arrowhead = "empty" 
 ] 
  IApplicationLauncher -> IDirectoryListener 

 edge [ 
  style="dashed", arrowhead= "vee" 
 ] 
 IApplicationLauncher -> Collection 

 edge [ 
  style="dashed", arrowhead= "vee" 
 ] 
 IApplicationLauncher -> ProcessRunner 

 edge [ 
  style="dashed", arrowhead= "vee" 
 ] 
 IApplicationLauncher -> String 
IDirectoryListener [ 
 label = " { IDirectoryListener||+ directoryChanged ( arg0 : Lab1_3.problem.DirectoryEvent): void \l 
 } " 
 ]
 edge [ 
  style="solid", arrowhead = "normal" 
 ] 
 IDirectoryListener -> Object 

 edge [ 
  style="dashed", arrowhead= "vee" 
 ] 
 IDirectoryListener -> DirectoryEvent 
IDirectoryMonitorService [ 
 label = " { IDirectoryMonitorService||+ getDirectory ( ): java.nio.file.Path \l+ isRunning ( ): boolean \l+ stopGracefully ( ): void \l+ addListener ( arg0 : Lab1_3.problem.IDirectoryListener): void \l+ removeListener ( arg0 : Lab1_3.problem.IDirectoryListener): void \l 
 } " 
 ]
 edge [ 
  style="solid", arrowhead = "normal" 
 ] 
 IDirectoryMonitorService -> Object 
 edge [ 
 style="solid", arrowhead = "empty" 
 ] 
  IDirectoryMonitorService -> Runnable 

 edge [ 
  style="dashed", arrowhead= "vee" 
 ] 
 IDirectoryMonitorService -> Path 

 edge [ 
  style="dashed", arrowhead= "vee" 
 ] 
 IDirectoryMonitorService -> boolean 

 edge [ 
  style="dashed", arrowhead= "vee" 
 ] 
 IDirectoryMonitorService -> IDirectoryListener 

 edge [ 
  style="dashed", arrowhead= "vee" 
 ] 
 IDirectoryMonitorService -> IDirectoryListener 
ProcessRunner [ 
 label = " { ProcessRunner|# processes: java.util.List \l# command: java.lang.String \l|+ init ( arg0 : java.lang.String): void \l+ getProcesses ( ): java.util.List \l+ getCommand ( ): java.lang.String \l+ execute ( arg0 : java.nio.file.Path): void \l 
 } " 
 ]
 edge [ 
  style="solid", arrowhead = "normal" 
 ] 
 ProcessRunner -> Object 

 edge [ 
  style="solid", arrowhead= "vee" 
 ] 
 ProcessRunner -> Process 

 edge [ 
  style="solid", arrowhead= "vee" 
 ] 
 ProcessRunner -> String 

 edge [ 
  style="dashed", arrowhead= "vee" 
 ] 
 ProcessRunner -> String 

 edge [ 
  style="dashed", arrowhead= "vee" 
 ] 
 ProcessRunner -> List 

 edge [ 
  style="dashed", arrowhead= "vee" 
 ] 
 ProcessRunner -> String 

 edge [ 
  style="dashed", arrowhead= "vee" 
 ] 
 ProcessRunner -> Path 
}